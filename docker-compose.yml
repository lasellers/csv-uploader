# See https://hub.docker.com/_/mariadb

# See README.md

# sudo docker network inspect csvuploader_default

# sudo docker-compose -f Dockerfile up --builld --remove-orphans

version: '3'
services:
#  # VueJS SPA
#  vuespa:
#    #hostname: vuespa.csvuploader.localhost.com
#    container_name: csvuploader_vuespa
#    build:
#      context: .
#      dockerfile: ./vuespa.Dockerfile
#    restart: unless-stopped
#    tty: true
#    volumes:
#      - './vuespa:/app' # mirror ./vuespa to container app folder
#      - '/app/node_modules'
#    ports:
#      - 81:80
#      - 444:443
#      #- 8080:8080 # poke a hole for npm run start
#    expose:
#      - 81
#      - 444
#    environment:
#      - CHOKIDAR_USEPOLLING=true # for hot reload
#      - REACT_APP_API_URL=${REACT_APP_API_URL} # pass to React so it knows the API endpoints
#      - PUBLIC_URL=${PUBLIC_URL} # for React index
#    depends_on:
#      - db
#      - api

  # React SPA
  spa:
    #hostname: spa.csvuploader.localhost.com
    container_name: csvuploader_spa
    build:
      context: .
      dockerfile: ./spa.Dockerfile
    restart: unless-stopped
    tty: true
    volumes:
      - './spa:/app' # mirror ./spa to container app folder
      - '/app/node_modules'
    ports:
      - 80:80
      - 443:443
    expose:
      - 80
      - 443
    environment:
      - CHOKIDAR_USEPOLLING=true # for hot reload
      - REACT_APP_API_URL=${REACT_APP_API_URL} # pass to React so it knows the API endpoints
      - PUBLIC_URL=${PUBLIC_URL} # for React index
    depends_on:
      - db
      - api
      - apiweb
    networks:
      - csvuploader-network

  # Nginx Service - This is just the webserver interface to php
  # sudo docker exec -it csvuploader_apiweb sh
  apiweb:
    #hostname: apiweb.csvuploader.localhost.com
    container_name: csvuploader_apiweb
    build:
      context: .
      dockerfile: ./apiweb.Dockerfile
#    image: nginx:stable
    restart: unless-stopped
    tty: true
    working_dir: /var/www
    volumes:
      - './api:/var/www' # mirror ./api to container var www folder
      - '/var/www/vendor'
    ports:
      - "8000:80"
      - "8080:80"
      - "8443:443"
    networks:
      - csvuploader-network
    depends_on:
      - api
#    environment:
#      - NGINX_HOST=localhost
#      - NGINX_PORT=80

  # Laravel API
  # sudo docker exec -it csvuploader_api /bin/bash
  api:
    #hostname: api.csvuploader.localhost.com
    container_name: csvuploader_api
    build:
      context: .
      dockerfile: ./api.Dockerfile
    image: digitalocean.com/php
    restart: unless-stopped
    tty: true
    working_dir: /var/www
    volumes:
    - './api:/var/www' # mirror ./api to container var www folder
    - '/var/www/vendor'
    #- './php.ini:/usr/local/etc/php/conf.d/local.ini'
    environment:
      - SERVICE_NAME=apiweb
      - SERVICE_TAGS=dev
      - DB_HOST=db
    expose:
      - 9000
    links:
      - db:mysql
    depends_on:
      - db
    networks:
      - csvuploader-network

  # MariaDB DB
  # sudo docker exec -it csvuploader_db /bin/bash
  # mysql -uroot -ppassword
  # show databases;
  # use csvuploader;
  # show tables;
  db:
    #hostname: db.csvuploader.localhost.com
    hostname: localhost
    container_name: csvuploader_db
    build:
      context: .
      dockerfile: ./db.Dockerfile
    #image: mariadb
    restart: always
    ports:
      - 3306:3306
    expose:
      - 3306
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MARIADB_DATABASE=${DB_DATABASE} # CREATE DATABASE csvuploader;
      - MARIADB_ROOT_PASSWORD=${DB_ROOT_PASSWORD} # CREATE USER 'csvuploader' IDENTIFIED BY 'password'; GRANT ALL ON *.* TO 'csvuploader'@'%';
      - MARIADB_USER=${DB_USERNAME}
      - MARIADB_PASSWORD=${DB_PASSWORD}
    volumes:
      # - csvuploader_db:/var/lib/mysql
      # - ./db:/var/lib/mysql
      - ./db/sql:/docker-entrypoint-initdb.d
    networks:
      - csvuploader-network

networks:
  csvuploader-network:
    #driver: bridge