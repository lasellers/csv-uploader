{"version":3,"sources":["serviceWorker.js","redux/reducers/user.js","redux/reducers/index.js","redux/store.js","components/HomePage.js","components/User.js","components/Users.js","components/AddMessage.js","components/Messages.js","redux/actions.js","components/Login.js","components/Logout.js","components/Register.js","components/About.js","components/NotFoundPage.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","isLoggedIn","user","combineReducers","state","action","type","payload","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","HomePage","React","Component","User","props","useState","setUser","useEffect","fetch","API_URL","id","then","res","json","result","error","Object","entries","length","className","name","email","createdAt","updatedAt","Users","users","console","log","setState","this","store","getState","to","map","userItem","key","onClick","toLocaleString","AddMessage","title","setTitle","message","setMessage","isPosted","setIsPosted","subscribe","onSubmit","event","preventDefault","requestOptions","method","redirect","headers","Form","Group","controlId","Label","Control","autoFocus","value","onChange","e","target","as","rows","Button","block","disabled","Messages","isLoaded","messages","userId","repliedTo","addUser","Login","setEmail","password","setPassword","setIsLoggedIn","dispatch","Logout","Register","setName","info","AboutUs","NotFoundPage","App","nav","Nav","Link","Navbar","expand","bg","Toggle","aria-controls","Collapse","path","component","exact","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.368e54a1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n    isLoggedIn: false,\n    user: {}\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case 'ADD_USER': {\n            const {user, isLoggedIn} = action.payload;\n            return {\n                ...state,\n                user,\n                isLoggedIn\n            };\n        }\n        case 'REMOVE_USER': {\n            const {user, isLoggedIn} = action.payload;\n            return {\n                ...state,\n                user,\n                isLoggedIn\n            };\n        }\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\n\nimport user from \"./user\";\n\nexport default combineReducers({ user });\n","import {createStore} from \"redux\";\n\nimport rootReducer from \"./reducers/index\";\n\nexport default createStore(rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import React from 'react';\n\n/*\nconst HomePage = () => (\n    <React.fragment>\n        <h1>Home</h1>\n        <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin faucibus magna quis tellus vestibulum blandit. Ut dignissim diam vitae turpis mattis porttitor. Suspendisse condimentum aliquet lectus, at molestie justo semper eu. Quisque vehicula velit nec dui blandit vestibulum. Mauris dignissim sem dolor, quis scelerisque arcu suscipit ac. Fusce vitae lorem ante. Phasellus id dui risus. Phasellus molestie congue sem, eu hendrerit sapien placerat in. Aenean justo ex, sodales vitae egestas eu, tempus porttitor eros. Integer nec sodales ante. Pellentesque rhoncus ex ac rhoncus tempus. Praesent tincidunt nulla at leo scelerisque luctus. Fusce aliquam lectus nec imperdiet efficitur. Etiam sodales, libero id ornare aliquam, magna nunc ornare risus, eget aliquam dui libero a ante.\n        </p>\n    </React.fragment>\n);\n\nexport default HomePage;\n*/\n\nclass HomePage extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <h1>Home</h1>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin faucibus magna quis tellus vestibulum blandit. Ut dignissim diam vitae turpis mattis porttitor. Suspendisse condimentum aliquet lectus, at molestie justo semper eu. Quisque vehicula velit nec dui blandit vestibulum. Mauris dignissim sem dolor, quis scelerisque arcu suscipit ac. Fusce vitae lorem ante. Phasellus id dui risus. Phasellus molestie congue sem, eu hendrerit sapien placerat in. Aenean justo ex, sodales vitae egestas eu, tempus porttitor eros. Integer nec sodales ante. Pellentesque rhoncus ex ac rhoncus tempus. Praesent tincidunt nulla at leo scelerisque luctus. Fusce aliquam lectus nec imperdiet efficitur. Etiam sodales, libero id ornare aliquam, magna nunc ornare risus, eget aliquam dui libero a ante.\n                </p>\n            </div>\n        );\n    }\n}\n\nexport default HomePage;\n","import React, {useState, useEffect} from \"react\";\nimport {API_URL} from \"../App\";\n\nexport default function User(props) {\n    const [user, setUser] = useState(null);\n    useEffect(() => {\n        fetch(API_URL + \"/user/\" + props.user.id)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    if (result !== null) {\n                        if (user === null || result.id !== user.id) {\n                            setUser(result);\n                        }\n                    }\n                },\n                (error) => {\n                }\n            );\n    });\n\n    if (user === null || Object.entries(user).length === 0)\n        return (\n            <div>\n                <h1>User</h1>\n                <p>None.</p>\n            </div>\n        );\n\n    return (\n        <>\n            <h1>User</h1>\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-md-6\">#</div>\n                    <div className=\"col-md-6\">{user.id}</div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">Name</div>\n                    <div className=\"col-md-6\">{user.name}</div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">Email</div>\n                    <div className=\"col-md-6\">{user.email}</div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">Created</div>\n                    <div className=\"col-md-6\">{user.createdAt}</div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">Updated</div>\n                    <div className=\"col-md-6\">{user.updatedAt}</div>\n                </div>\n            </div>\n        </>\n    );\n}\n","import React, {Component} from \"react\";\nimport {API_URL} from \"../App\";\nimport User from './User';\nimport store from \"../redux/store\";\nimport {Redirect} from \"react-router\";\n\nclass Users extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: \"\",\n            users: [],\n            user: {}\n        };\n    }\n\n    componentDidMount() {\n        fetch(API_URL + \"/users\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log('result', result);\n                    this.setState({\n                        users: result\n                    });\n                },\n                (error) => {\n                    console.log('error', error);\n                    this.setState({\n                        error\n                    });\n                }\n            )\n    }\n\n    setUser(user) {\n        console.log('************** setUser user', user);\n        this.setState({user: user});\n    }\n\n    render() {\n        const {error, users, user} = this.state;\n\n        if (store.getState().user.isLoggedIn === false) {\n            return (<Redirect to='/'/>);\n        }\n\n\n        if (users.length === 0)\n            return (\n                <div>\n                    <h1>Users</h1>\n                    <p>None.</p>\n                </div>\n            );\n\n        return (\n            <>\n                <div className=\"row\">\n\n                    <div className=\"col-6\">\n\n                        <h1>Users</h1>\n                        <table className=\"table table-striped\">\n                            <thead>\n                            <tr>\n                                <th>id</th>\n                                <th>Name</th>\n                                <th>Email</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {users.map(userItem => (\n                                <tr key={userItem.id} onClick={() => this.setUser(userItem)}>\n                                    <td>{userItem.id}</td>\n                                    <td>{userItem.name}</td>\n                                    <td>{userItem.email}</td>\n                                </tr>\n                            ))}\n                            </tbody>\n                        </table>\n\n                    </div>\n                    <div className=\"col-6\">\n\n                        <User user={user}/>\n\n                    </div>\n\n                </div>\n\n                {error.toLocaleString()}\n            </>\n        );\n    }\n}\n\nexport default Users;\n","import React, {useState} from \"react\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {Redirect} from \"react-router\";\nimport store from \"../redux/store\";\nimport \"./Register.css\";\nimport {API_URL} from \"../App\";\n\nexport default function AddMessage() {\n    const [title, setTitle] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [user, setUser] = useState(null);\n    const [isPosted, setIsPosted] = useState(false);\n\n    store.subscribe(function () {\n        const user = store.getState().user;\n        console.log('!!!!!!!!!!! AddMessage store subscribe', user);\n        setUser(user.user);\n    });\n\n    function validateForm() {\n        return message.length > 0;\n    }\n\n    function handleSubmit(event) {\n        console.log('handleSubmit');\n        event.preventDefault();\n\n        const requestOptions = {\n            method: 'POST',\n            redirect: 'follow',\n            headers: {'Content-Type': 'application/json'}\n        };\n        console.log(requestOptions);\n        console.log(user);\n\n        fetch(API_URL + `/message?title=${title}&message=${message}&userId=${user.id}`, requestOptions)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log('add message result ', result);\n                   // store.dispatch(addUser(result));\n                    setIsPosted(true);\n                },\n                (error) => {\n                    console.error(error);\n                }\n            )\n    }\n\n    if (isPosted) {\n        return <Redirect to='/messages'/>;\n    }\n\n    return (\n        <div className=\"AddMessage\">\n            <form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"name\">\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control\n                        autoFocus\n                        type=\"title\"\n                        value={title}\n                        onChange={e => setTitle(e.target.value)}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"email\">\n                    <Form.Label>Message</Form.Label>\n                    <Form.Control\n                        as=\"textarea\" rows=\"5\"\n                        autoFocus\n                        type=\"message\"\n                        value={message}\n                        onChange={e => setMessage(e.target.value)}\n                    />\n                </Form.Group>\n                <Button block disabled={!validateForm()} type=\"submit\">\n                    Add Message\n                </Button>\n                <div>From: {user.name}</div>\n            </form>\n        </div>\n    );\n}\n","import React from 'react';\nimport {API_URL} from \"../App\";\nimport AddMessage from \"./AddMessage\";\nimport store from \"../redux/store\";\nimport {Redirect} from \"react-router\";\n\nclass Messages extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: \"\",\n            isLoaded: false,\n            messages: []\n        };\n\n    }\n\n    componentDidMount() {\n        fetch(API_URL + \"/messages\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        isLoaded: true,\n                        messages: result\n                    });\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            )\n    }\n\n    render() {\n        const {error, isLoaded, messages} = this.state;\n\n        if (store.getState().user.isLoggedIn === false) {\n            return (<Redirect to='/'/>);\n        }\n\n        if (!isLoaded)\n            return (\n                <div>\n                    <h1>Messages</h1>\n                    <p>None.</p>\n                </div>\n            );\n\n        return (\n            <>\n                <div className=\"row\">\n                    <div className=\"col-6\">\n\n                        <h1>Messages</h1>\n\n                        <table className=\"table table-striped\">\n                            <thead>\n                            <tr>\n                                <th>id</th>\n                                <th>Title</th>\n                                <th>Message</th>\n                                <th>UserId</th>\n                                <th>RepliedTo</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {messages.map(message => (\n                                <tr key={message.id}>\n                                    <td>{message.id}</td>\n                                    <td>{message.title}</td>\n                                    <td>{message.message}</td>\n                                    <td>{message.userId}</td>\n                                    <td>{message.repliedTo}</td>\n                                </tr>\n                            ))}\n                            </tbody>\n                        </table>\n\n                    </div>\n                    <div className=\"col-6\">\n\n                        <AddMessage/>\n                    </div>\n\n                </div>\n\n                {error.toLocaleString()}\n\n            </>\n        );\n    }\n}\n\nexport default Messages;\n","export const removeUser = status => ({\n    type: 'REMOVE_USER',\n    payload: {\n        user: {},\n        isLoggedIn: false\n    }\n});\n\nexport const addUser = user => ({\n    type: 'ADD_USER',\n    payload: {\n        user: user,\n        isLoggedIn: true\n    }\n});\n","import React, {useState} from \"react\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {Redirect} from \"react-router-dom\";\nimport store from \"../redux/store\";\nimport {addUser} from \"../redux/actions\";\nimport \"./Login.css\";\nimport {API_URL} from \"../App\";\n\nexport default function Login() {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    store.subscribe(function () {\n        const user = store.getState().user;\n        setIsLoggedIn(user.isLoggedIn);\n    });\n\n    function validateForm() {\n        return email.length > 0 && password.length > 0;\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        const requestOptions = {\n            method: 'POST',\n            redirect: 'follow',\n            headers: {'Content-Type': 'application/json'}//,\n        };\n\n        fetch(API_URL + `/login?username=${email}&password=${password}`, requestOptions)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    store.dispatch(addUser(result));\n                },\n                (error) => {\n                    console.error(error);\n                }\n            )\n    }\n\n    if (isLoggedIn) {\n        return <Redirect to='/messages'/>;\n    }\n\n    if (store.getState().user.isLoggedIn === true) {\n        return (<Redirect to='/'/>);\n    }\n\n    return (\n        <div className=\"Login\">\n            <form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"email\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control\n                        autoFocus\n                        type=\"email\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        type=\"password\"\n                    />\n                </Form.Group>\n                <Button block disabled={!validateForm()} type=\"submit\">\n                    Login\n                </Button>\n            </form>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport \"./Logout.css\";\nimport {API_URL} from \"../App\";\nimport {Redirect} from \"react-router\";\nimport store from \"../redux/store\";\nimport {removeUser} from \"../redux/actions\";\n\nexport default function Logout() {\n    const [email, setEmail] = useState(\"\");\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    store.subscribe(function () {\n        const user = store.getState().user;\n        setEmail(user.email);\n        setIsLoggedIn(user.isLoggedIn);\n    });\n\n    function validateForm() {\n        return true;\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        const requestOptions = {\n            method: 'GET',\n            redirect: 'follow',\n            headers: {'Content-Type': 'application/json'}//,\n        };\n\n        fetch(API_URL + `/logout?username=${email}`, requestOptions)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log('logout',result);\n                    store.dispatch(removeUser());\n                },\n                (error) => {\n                    console.error(error);\n                }\n            )\n    }\n\n    if(!isLoggedIn) {\n        return <Redirect to='/' />;\n    }\n\n    if (store.getState().user.isLoggedIn === false) {\n        return (<Redirect to='/'/>);\n    }\n\n    return (\n        <div className=\"Logout\">\n            <form onSubmit={handleSubmit}>\n                <Button block disabled={!validateForm()} type=\"submit\">\n                    Logout\n                </Button>\n            </form>\n        </div>\n    );\n}\n","import React, {useState} from \"react\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {Redirect} from \"react-router\";\nimport store from \"../redux/store\";\nimport {addUser} from \"../redux/actions\";\nimport \"./Register.css\";\nimport {API_URL} from \"../App\";\n\nexport default function Register() {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    store.subscribe(function () {\n        const user = store.getState().user;\n        setIsLoggedIn(user.isLoggedIn);\n    });\n\n    function validateForm() {\n        return email.length > 0 && password.length > 0 && name.length > 0;\n    }\n\n    function handleSubmit(event) {\n        console.log('handleSubmit');\n        event.preventDefault();\n\n        const requestOptions = {\n            method: 'POST',\n            redirect: 'follow',\n            headers: {'Content-Type': 'application/json'}\n        };\n        console.info(email,password,name);\n        console.info(requestOptions);\n        fetch(API_URL + `/user?email=${email}&password=${password}&name=${name}`, requestOptions)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log('result ', result);\n                    store.dispatch(addUser(result));\n                },\n                (error) => {\n                    console.error(error);\n                }\n            )\n    }\n\n    if (isLoggedIn) {\n        return <Redirect to='/messages'/>;\n    }\n\n    return (\n        <div className=\"Register\">\n            <form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"name\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        autoFocus\n                        type=\"name\"\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"email\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control\n                        autoFocus\n                        type=\"email\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        type=\"password\"\n                    />\n                </Form.Group>\n                <Button block disabled={!validateForm()} type=\"submit\">\n                    Register\n                </Button>\n            </form>\n        </div>\n    );\n}\n","import React, {Component} from \"react\";\n\nclass AboutUs extends Component {\n    render() {\n        return (\n            <div>\n                <h2>About Us</h2>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin faucibus magna quis tellus vestibulum\n                    blandit. Ut dignissim diam vitae turpis mattis porttitor. Suspendisse condimentum aliquet lectus, at\n                    molestie justo semper eu. Quisque vehicula velit nec dui blandit vestibulum. Mauris dignissim sem\n                    dolor, quis scelerisque arcu suscipit ac. Fusce vitae lorem ante. Phasellus id dui risus. Phasellus\n                    molestie congue sem, eu hendrerit sapien placerat in. Aenean justo ex, sodales vitae egestas eu,\n                    tempus porttitor eros. Integer nec sodales ante. Pellentesque rhoncus ex ac rhoncus tempus. Praesent\n                    tincidunt nulla at leo scelerisque luctus. Fusce aliquam lectus nec imperdiet efficitur. Etiam\n                    sodales, libero id ornare aliquam, magna nunc ornare risus, eget aliquam dui libero a ante.\n                </p>\n            </div>\n        )\n    }\n}\n\nexport default AboutUs;\n","import React from 'react';\n\nconst NotFoundPage = () => (\n    <h1>404: Page Not Found</h1>\n);\n\nexport default NotFoundPage;\n","import React, {useState} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nimport {BrowserRouter, Link, Route, Switch} from \"react-router-dom\";\n\nimport HomePage from \"./components/HomePage\";\nimport Users from \"./components/Users\";\nimport Messages from \"./components/Messages\";\nimport Login from \"./components/Login\";\nimport Logout from \"./components/Logout\";\nimport Register from \"./components/Register\";\nimport AboutUs from \"./components/About\";\nimport NotFoundPage from \"./components/NotFoundPage\";\nimport store from \"./redux/store\";\n\nexport const API_URL = \"http://localhost:3001/api\";\n\nfunction App(props) {\n    const [user, setUser] = useState(store.getState().user);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    store.subscribe(function () {\n        const user = store.getState().user;\n        setUser(user.user);\n        setIsLoggedIn(user.isLoggedIn);\n    });\n\n    let nav;\n    if (isLoggedIn) {\n        nav = <>\n            <Nav className=\"mr-auto\">\n                <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n                <Nav.Link as={Link} to=\"/users\">Users</Nav.Link>\n                <Nav.Link as={Link} to=\"/messages\">Messages</Nav.Link>\n                <Nav.Link as={Link} to=\"/about\">About Us</Nav.Link>\n            </Nav>\n\n            <Nav className=\"ml-auto\">\n                <Nav.Link as={Link} to=\"/logout\">Logout</Nav.Link>\n            </Nav>\n        </>;\n    } else {\n        nav = <>\n            <Nav className=\"ml-auto\">\n                <Nav.Link as={Link} to=\"/register\">Register</Nav.Link>\n                <Nav.Link as={Link} to=\"/login\">Login</Nav.Link>\n            </Nav>\n        </>;\n    }\n\n    return (\n        <BrowserRouter>\n            <header id=\"App-header\">\n                <Navbar expand=\"lg\">\n                    <Nav className=\"\">\n                        <h1>Red Messenger</h1>\n                    </Nav>\n                    <Nav className=\"ml-auto\">\n                        <small>{user.name}</small>\n                    </Nav>\n                </Navbar>\n            </header>\n\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    {nav}\n                </Navbar.Collapse>\n            </Navbar>\n\n            <main className=\"App\">\n                <div id=\"App-body\">\n                    <Switch>\n                        <Route path=\"/\" component={HomePage} exact/>\n                        <Route path=\"/home\" component={HomePage}/>\n                        <Route path=\"/register\" component={Register} exact/>\n                        <Route path=\"/login\" component={Login} exact/>\n                        <Route path=\"/logout\" component={Logout} exact/>\n                        <Route path=\"/users\" component={Users}/>\n                        <Route path=\"/messages\" component={Messages}/>\n                        <Route path=\"/about\" component={AboutUs}/>\n                        <Route component={NotFoundPage}/>\n                    </Switch>\n                </div>\n            </main>\n\n        </BrowserRouter>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\n\n// store.subscribe( () => console.log('store', store.getState()));\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}